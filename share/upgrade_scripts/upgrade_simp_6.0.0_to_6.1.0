#!/bin/sh
#
# This script safely upgrades SIMP 6.0.0 to SIMP 6.1.0.
# It assumes the YUM repositories for SIMP 6.1.0 are already configured.
#
# NOTE:  It will upgrade system RPMs, as well as SIMP-related RPMs.
info()
{
  # log bold
  echo -e "\e[1m${1}\e[0m"
}

warn()
{
  # log bold black on yellow background
  echo -e "\e[1;30;103mWARNING: ${1}\e[0m"
}

fail()
{
  # log bold red
  echo -e "\e[1;31mERROR: ${1} Upgrade aborted.\e[0m"
  exit 1
}

info "STARTING UPGRADE"
simp_type="poss"
/bin/rpm -q simp-adapter-pe > /dev/null 2>&1
if [ "$?" == "0" ]; then
  simp_type="pe"
else
  /bin/rpm -q simp-adapter > /dev/null 2>&1
  if [ "$?" != "0" ]; then
    simp_type="none"
  fi
fi

if [ "$simp_type" == "none" ]; then
  fail "No simp-adapter package installed.  This is not a SIMP 6.0.0 system."
fi

info ">>> Rebuilding YUM cache"
/usr/bin/yum clean all > /dev/null 2>&1
/usr/bin/yum makecache > /dev/null 2>&1

info ">>> Updating packages..."
# Spot check yum setup by seeing if simp-6.1.0 RPM exists
/usr/bin/yum list simp-6.1.0 > /dev/null 2>&1
if [ "$?" != "0" ]; then
  fail "simp-6.1.0 package not found. YUM not set up for SIMP 6.1.0."
fi

# Prevent puppet agent from running while we are updating RPMs
/opt/puppetlabs/bin/puppet agent --disable "SIMP upgrade in progress"

/usr/bin/yum update -y
if [ "$?" != "0" ]; then
  fail "Package updates failed."
fi

info
info ">>> Fixing package installs"
# Reinstall 2 RPMs with post-install problems.
/usr/bin/yum reinstall -y simp-gpgkeys pupmod-simp-timezone
if [ "$?" != "0" ]; then
  fail "Reinstall of simp-gpgkeys and pupmod-simp-timezone failed."
fi

if [ "$simp_type" == "pe" ]; then
  /opt/puppetlabs/bin/puppet agent --enable
  info "UPGRADE COMPLETE"
  exit 0
fi


# Proactively stop and disable the postgresql-9.4 service, and then
# erase the PostgreSQL 9.4 RPMs.  We do this because the upgrade to
# PostgreSQL 9.6 doesn't always work.  When it works, Puppet correctly
# stops and disables the postgresql-9.4 service, prior installing and
# configuring PostgreSQL 9.6.  When it fails, Puppet installs and 
# configures PostgreSQL 9.6 prior to stopping and disabling PostgreSQL
# 9.4.  This can leave you in a bad state that is painful to recover
# from:
#  * The postgresql-9.6 sevice cannot be started, because the
#    postgresql-9.4 service is running and binding to needed ports.
#  * The postgresql-9.4 service cannot be stopped because it's service
#    script is unsuccessfully attempting to use a configuration file
#    that has already been updated for postgresql-9.6.
#  * PuppetDB can't be restarted, because postgresql-9.6 can't run.
#  * 'puppet agent -t' can't run because it is configured to
#    use PuppetDB.
#    
# Although you can manually fix these problems to get back to a sane
# state, it is much easier to prevent them from happening!
#
# NOTE:
#   These steps do not attempt to migrate the data from the 9.4
#   databases to the 9.6 databases.  If you need that migration, please
#   see https://www.postgresql.org/docs/9.6/static/upgrading.html
#   for guidance.
#
info
info ">>> Stopping and removing PostgreSQL 9.4"
# Since, neither one of the next two operations fails if PostgreSQL
# 9.4 is not installed, we can be assured any errors are real. 
/opt/puppetlabs/bin/puppet resource service postgresql-9.4 ensure='stopped' enable='false'
if [ "$?" != "0" ]; then
  fail "postgresql-9.4 service could not be stopped."
fi

/usr/bin/yum -y erase postgresql94-libs postgresql94 postgresql94-server
if [ "$?" != "0" ]; then
  fail "PostgreSQL 9.4 RPMs could not be erased."
fi

/opt/puppetlabs/bin/puppet agent --enable

# Normally, only a 'puppetserver reload' would be required.  However,
# in some cases, the puppetserver is actually dead after the yum update.
# So, use the restart to handle all cases.
info
info ">>> Restarting puppetserver"
info ">>>>>> Stopping puppetserver"
/opt/puppetlabs/bin/puppet resource service puppetserver ensure='stopped' > /dev/null 2>&1
info ">>>>>> Starting puppetserver..."
/opt/puppetlabs/bin/puppet resource service puppetserver ensure='running' > /dev/null 2>&1
if [ "$?" != "0" ]; then
  fail "puppetserver could not be restarted."
fi 

info
info ">>> In 10 seconds, puppet will be run to affect module upgrades."
info "    Enter CTRL-C, now, to skip these final upgrade steps."

sleep 10
/opt/puppetlabs/bin/puppet agent -t --detailed-exitcodes

result=$?
if [ "$result" == "1" ]; then
  info
  warn "Unable to run puppet."
  info "Please resolve the problem and run 'puppet agent -t ' to finish the upgrade."
  exit 1
elif  [ "$result" == "4" ] || [ "$result" == "6" ]; then
  info
  info "UPGRADE COMPLETE"
  warn "Puppet apply failures detected. Additional puppet runs may be required."
else
  info
  info "UPGRADE SUCCESSFULLY COMPLETED"
fi

exit 0
